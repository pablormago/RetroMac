{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;\f2\fnil\fcharset0 HelveticaNeue;
}
{\colortbl;\red255\green255\blue255;\red93\green108\blue121;\red255\green255\blue255;\red0\green0\blue0;
\red155\green35\blue147;\red11\green79\blue121;\red57\green0\blue160;\red15\green104\blue160;\red108\green54\blue169;
\red50\green109\blue116;\red28\green0\blue207;\red196\green26\blue22;\red93\green108\blue121;\red28\green70\blue74;
}
{\*\expandedcolortbl;;\csgenericrgb\c36526\c42188\c47515;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0\c85000;
\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c4314\c30980\c47451;\csgenericrgb\c22454\c0\c62803;\csgenericrgb\c5882\c40784\c62745;\csgenericrgb\c42190\c21278\c66379;
\csgenericrgb\c19418\c42935\c45455;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c36526\c42188\c47515\c35000;\csgenericrgb\c10981\c27276\c28869;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh16580\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 //\cf4 \
\cf2 //  ListaViewController.swift\cf4 \
\cf2 //  RetroMac\cf4 \
\cf2 //\cf4 \
\cf2 //  Created by Pablo Jimenez on 09/12/2021.\cf4 \
\cf2 //  Copyright \'a9 2021 pmg. All rights reserved.\cf4 \
\cf2 //\cf4 \
\

\f1\b \cf5 import
\f0\b0 \cf4  Cocoa\

\f1\b \cf5 import
\f0\b0 \cf4  Commands\

\f1\b \cf5 import
\f0\b0 \cf4  AVKit\

\f1\b \cf5 import
\f0\b0 \cf4  AVFoundation\
\

\f1\b \cf5 class
\f0\b0 \cf4  \cf6 ListaViewController\cf4 : \cf7 NSViewController\cf4 , \cf7 NSTableViewDataSource\cf4 , \cf7 NSTableViewDelegate\cf4  \{\
\
    
\f1\b \cf5 @IBOutlet
\f0\b0 \cf4  
\f1\b \cf5 weak
\f0\b0 \cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 snapPlayer\cf4 : \cf7 AVPlayerView\cf4 !\
    
\f1\b \cf5 @IBOutlet
\f0\b0 \cf4  
\f1\b \cf5 weak
\f0\b0 \cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 backButton\cf4 : \cf7 NSButton\cf4 !\
    
\f1\b \cf5 @IBOutlet
\f0\b0 \cf4  
\f1\b \cf5 weak
\f0\b0 \cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 juegosTableView\cf4 : \cf7 NSTableView\cf4 !\
    
\f1\b \cf5 @IBOutlet
\f0\b0 \cf4  
\f1\b \cf5 weak
\f0\b0 \cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 pruebaBoton\cf4 : \cf7 NSButton\cf4 !\
    
\f1\b \cf5 @IBOutlet
\f0\b0 \cf4  
\f1\b \cf5 weak
\f0\b0 \cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 snapShot\cf4 : \cf7 NSImageView\cf4 !\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 juegos\cf4  = [\cf7 String\cf4 ]()\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 keyIsDown\cf4  = 
\f1\b \cf5 false
\f0\b0 \cf4 \
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 playingVideo\cf4  = 
\f1\b \cf5 false
\f0\b0 \cf4 \
\cf2 //    x\cf4 \
   \
    \
    
\f1\b \cf5 override
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 viewDidLoad\cf4 () \{\
        
\f1\b \cf5 super
\f0\b0 \cf4 .\cf9 viewDidLoad\cf4 ()\
        \
        \cf2 // Do view setup here.\cf4 \
        \
\cf2 //        DispatchQueue.main.async \{\cf4 \
\cf2 //            self.view.window?.zoom(self)\cf4 \
\cf2 //        \}\cf4 \
        \cf2 //Cargar nombres de archivos en carpeta dentro de la tabla\cf4 \
        
\f1\b \cf5 for
\f0\b0 \cf4  extensiones 
\f1\b \cf5 in
\f0\b0 \cf4  \cf10 systemextensions\cf4  \{\
\
            \
            
\f1\b \cf5 let
\f0\b0 \cf4  fileManager = \cf7 FileManager\cf4 .\cf9 default\cf4 \
            
\f1\b \cf5 let
\f0\b0 \cf4  enumerator: \cf7 FileManager\cf4 .\cf7 DirectoryEnumerator\cf4  = fileManager.\cf9 enumerator\cf4 (atPath: \cf10 rompath\cf4  
\f1\b \cf5 as
\f0\b0 \cf4  \cf7 String\cf4 )!\
            
\f1\b \cf5 while
\f0\b0 \cf4  
\f1\b \cf5 let
\f0\b0 \cf4  element = enumerator.\cf9 nextObject\cf4 () 
\f1\b \cf5 as
\f0\b0 \cf4 ? \cf7 String\cf4  \{\
                
\f1\b \cf5 if
\f0\b0 \cf4  element.\cf9 hasSuffix\cf4 (extensiones) \{ \cf2 // checks the extension\cf4 \
                    \cf10 juegos\cf4 .\cf9 append\cf4 (element)\
                \}\
            \}\
            \cf10 juegos\cf4 .\cf9 sort\cf4 ()\
         \}\
        
\f1\b \cf5 if
\f0\b0 \cf4  \cf10 juegos\cf4 .\cf9 count\cf4  \cf9 >\cf4  \cf11 0\cf4  \{\
            
\f1\b \cf5 let
\f0\b0 \cf4  indexSet = \cf7 NSIndexSet\cf4 (index: \cf11 0\cf4 )\
            \cf10 juegosTableView\cf4 .\cf9 selectRowIndexes\cf4 (indexSet 
\f1\b \cf5 as
\f0\b0 \cf4  \cf7 IndexSet\cf4 , byExtendingSelection: 
\f1\b \cf5 false
\f0\b0 \cf4 )\
        \}\
        \
        \cf10 juegosTableView\cf4 .\cf9 doubleAction\cf4  = 
\f1\b \cf5 #selector
\f0\b0 \cf4 (\cf10 onItemClicked\cf4 )\
        \
        \cf2 //nombres cargados\cf4 \
        \
    \}\
    
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 numberOfRows\cf4 (in juegosTableView: \cf7 NSTableView\cf4 ) -> \cf7 Int\cf4  \{\
    \
        
\f1\b \cf5 return
\f0\b0 \cf4  \cf10 juegos\cf4 .\cf9 count\cf4 \
    \
    \}\
    \
    
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 tableView\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  juegosTableview: \cf7 NSTableView\cf4 , viewFor tableColumn: \cf7 NSTableColumn\cf4 ?, row: \cf7 Int\cf4 ) -> \cf7 NSView\cf4 ? \{\
        \
        
\f1\b \cf5 guard
\f0\b0 \cf4  
\f1\b \cf5 let
\f0\b0 \cf4  vw = juegosTableview.\cf9 makeView\cf4 (withIdentifier: tableColumn!.\cf9 identifier\cf4 , owner: 
\f1\b \cf5 self
\f0\b0 \cf4 ) 
\f1\b \cf5 as
\f0\b0 \cf4 ? \cf7 NSTableCellView\cf4  
\f1\b \cf5 else
\f0\b0 \cf4  \{
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 nil
\f0\b0 \cf4 \}\
        vw.\cf9 textField\cf4 ?.\cf9 stringValue\cf4  = \cf10 juegos\cf4 [row]\
        \cf2 //vw.textField?.font = NSFont(name: "Arial", size: 20)\cf4 \
        \
        
\f1\b \cf5 return
\f0\b0 \cf4  vw\
        \
    \}\
    \
    
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 tableViewSelectionDidChange\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  notification: \cf7 Notification\cf4 ) \{\
        \
        
\f1\b \cf5 guard
\f0\b0 \cf4  \cf10 juegosTableView\cf4 .\cf9 selectedRow\cf4  \cf9 !=\cf4  \cf11 -1\cf4  
\f1\b \cf5 else
\f0\b0 \cf4  \{
\f1\b \cf5 return
\f0\b0 \cf4 \}\
        
\f1\b \cf5 let
\f0\b0 \cf4  pathLogo = \cf7 Bundle\cf4 .\cf9 main\cf4 .\cf9 url\cf4 (forResource: \cf12 "logo"\cf4 , withExtension: \cf12 "jpeg"\cf4 )\
        \cf10 imageSelected\cf4 (path: pathLogo!  )\
        \
\cf2 //        //CARGAR IMAGENES Y VIDEOS\cf4 \
        
\f1\b \cf5 let
\f0\b0 \cf4  snapFolder = \cf10 rompath\cf4  \cf9 +\cf4  \cf12 "/snaps/"\cf4 \
        
\f1\b \cf5 let
\f0\b0 \cf4  theProjectPath = snapFolder\
        
\f1\b \cf5 var
\f0\b0 \cf4  isDir:\cf7 ObjCBool\cf4  = 
\f1\b \cf5 true
\f0\b0 \cf4 \
        \cf2 //comprobar carpeta SNAPS\cf4 \
        
\f1\b \cf5 var
\f0\b0 \cf4  tieneSnap = \cf7 Bool\cf4 ()\
        
\f1\b \cf5 var
\f0\b0 \cf4  tieneVideo = \cf7 Bool\cf4 ()\
        
\f1\b \cf5 var
\f0\b0 \cf4  miFoto = \cf7 String\cf4 ()\
        
\f1\b \cf5 var
\f0\b0 \cf4  miVideo = \cf7 String\cf4 ()\
        
\f1\b \cf5 if
\f0\b0 \cf4  \cf9 !\cf7 FileManager\cf4 .\cf9 default\cf4 .\cf9 fileExists\cf4 (atPath: theProjectPath, isDirectory: &isDir) \{\
\
                    \cf2 //PONER VIDEO EN NEGRO\cf4 \
            
\f1\b \cf5 let
\f0\b0 \cf4  noVideo = \cf7 Bundle\cf4 .\cf9 main\cf4 .\cf9 path\cf4 (forResource: \cf12 "NoVideo"\cf4 , ofType:\cf12 "mp4"\cf4 )\
            
\f1\b \cf5 let
\f0\b0 \cf4  videoURL = \cf7 URL\cf4 (fileURLWithPath: noVideo!)\
            
\f1\b \cf5 let
\f0\b0 \cf4  player2 = \cf7 AVPlayer\cf4 (url: videoURL)\
            \cf10 snapPlayer\cf4 .\cf9 player\cf4  = player2\
            \cf10 snapPlayer\cf4 .\cf9 player\cf4 ?.\cf9 play\cf4 ()\
            \
\
        \} 
\f1\b \cf5 else
\f0\b0 \cf4  \{\
            \
            
\f1\b \cf5 let
\f0\b0 \cf4  filaabuscar = \cf10 juegosTableView\cf4 .\cf9 selectedRow\cf4 \
            
\f1\b \cf5 let
\f0\b0 \cf4  nombreabuscar = \cf10 juegos\cf4 [filaabuscar]\
            \cf2 //                    //print(nombreabuscar)\cf4 \
            
\f1\b \cf5 var
\f0\b0 \cf4  name = (nombreabuscar 
\f1\b \cf5 as
\f0\b0 \cf4  \cf7 NSString\cf4 ).\cf9 deletingPathExtension\cf4 \
            
\f1\b \cf5 if
\f0\b0 \cf4  name.\cf9 contains\cf4 (\cf12 "/"\cf4 ) \{\
                
\f1\b \cf5 let
\f0\b0 \cf4  index2 = name.\cf9 range\cf4 (of: \cf12 "/"\cf4 , options: .\cf9 backwards\cf4 )?.\cf9 lowerBound\cf4 \
                
\f1\b \cf5 let
\f0\b0 \cf4  substring2 = name.\cf9 substring\cf4 (from: index2! )\
                
\f1\b \cf5 let
\f0\b0 \cf4  result1 = \cf7 String\cf4 (substring2.\cf9 dropFirst\cf4 ())\
                name = result1\
            \}\
            
\f1\b \cf5 else
\f0\b0 \cf4  \{\
                \
            \}\
            
\f1\b \cf5 let
\f0\b0 \cf4  fileManager = \cf7 FileManager\cf4 .\cf9 default\cf4 \
            
\f1\b \cf5 let
\f0\b0 \cf4  enumerator: \cf7 FileManager\cf4 .\cf7 DirectoryEnumerator\cf4  = fileManager.\cf9 enumerator\cf4 (atPath: \cf10 rompath\cf4  
\f1\b \cf5 as
\f0\b0 \cf4  \cf7 String\cf4 )!\
            \cf2 //Comprobamos Video\cf4 \
            
\f1\b \cf5 while
\f0\b0 \cf4  
\f1\b \cf5 let
\f0\b0 \cf4  element = enumerator.\cf9 nextObject\cf4 () 
\f1\b \cf5 as
\f0\b0 \cf4 ? \cf7 String\cf4  \{\
                
\f1\b \cf5 if
\f0\b0 \cf4  element.\cf9 contains\cf4 (name) \cf9 &&\cf4  element.\cf9 hasSuffix\cf4 (\cf12 ".mp4"\cf4 ) \{\
                    tieneVideo = 
\f1\b \cf5 true
\f0\b0 \cf4 \
                    miVideo = \cf10 rompath\cf4  \cf9 +\cf4  \cf12 "/"\cf4  \cf9 +\cf4  element\
                    
\f1\b \cf5 break
\f0\b0 \cf4 \
                \}\
                
\f1\b \cf5 else
\f0\b0 \cf4  \{\
                    tieneVideo = 
\f1\b \cf5 false
\f0\b0 \cf4 \
                \}\
            \}\
            \cf2 //Comprobamos Snapshot\cf4 \
            
\f1\b \cf5 let
\f0\b0 \cf4  enumerator2: \cf7 FileManager\cf4 .\cf7 DirectoryEnumerator\cf4  = fileManager.\cf9 enumerator\cf4 (atPath: \cf10 rompath\cf4  
\f1\b \cf5 as
\f0\b0 \cf4  \cf7 String\cf4 )!\
            
\f1\b \cf5 while
\f0\b0 \cf4  
\f1\b \cf5 let
\f0\b0 \cf4  element = enumerator2.\cf9 nextObject\cf4 () 
\f1\b \cf5 as
\f0\b0 \cf4 ? \cf7 String\cf4  \{\
                \
                
\f1\b \cf5 if
\f0\b0 \cf4  element.\cf9 contains\cf4 (name)\{\
                    
\f1\b \cf5 if
\f0\b0 \cf4  (element.\cf9 hasSuffix\cf4 (\cf12 ".png"\cf4 ) \cf9 ||\cf4  element.\cf9 hasSuffix\cf4 (\cf12 ".jpg"\cf4 ) \cf9 ||\cf4  element.\cf9 hasSuffix\cf4 (\cf12 ".jpeg"\cf4 )) \cf9 &&\cf4  \cf9 !\cf4 element.\cf9 contains\cf4 (\cf12 "marquee"\cf4 )\{\
                        tieneSnap = 
\f1\b \cf5 true
\f0\b0 \cf4 \
                        miFoto = \cf10 rompath\cf4  \cf9 +\cf4  \cf12 "/"\cf4  \cf9 +\cf4  element\
                        
\f1\b \cf5 break
\f0\b0 \cf4 \
                    \}\
                \}\
                
\f1\b \cf5 else
\f0\b0 \cf4  \{\
                    tieneSnap = 
\f1\b \cf5 false
\f0\b0 \cf4 \
                \}\
            \}\
            \
            \cf2 //TERMINADA LA BUSQUEDA, COMPROBAMOS SI TIENE SNAP Y VIDEO\cf4 \
            \
            
\f1\b \cf5 if
\f0\b0 \cf4  tieneSnap \cf9 ==\cf4  
\f1\b \cf5 true
\f0\b0 \cf4  \{\
                \cf9 print\cf4 (\cf12 "La foto es: \cf4 \\(miFoto)\cf12 "\cf4 )\
                
\f1\b \cf5 let
\f0\b0 \cf4  fotoURL = \cf7 URL\cf4 (fileURLWithPath: miFoto)\
                \cf10 imageSelected\cf4 (path: fotoURL)\
            \}
\f1\b \cf5 else
\f0\b0 \cf4  \{\
                \cf9 print\cf4 (\cf12 "No tiene foto"\cf4 )\
            \}\
            \
            
\f1\b \cf5 if
\f0\b0 \cf4  tieneVideo \cf9 ==\cf4  
\f1\b \cf5 true
\f0\b0 \cf4  \{\
                \cf9 print\cf4 (\cf12 "El video es: \cf4 \\(miVideo)\cf12 "\cf4 )\
                
\f1\b \cf5 let
\f0\b0 \cf4  videoURL = \cf7 URL\cf4 (fileURLWithPath: miVideo)\
                
\f1\b \cf5 let
\f0\b0 \cf4  player2 = \cf7 AVPlayer\cf4 (url: videoURL)\
                \cf10 snapPlayer\cf4 .\cf9 player\cf4  = player2\
                \cf10 snapPlayer\cf4 .\cf9 player\cf4 ?.\cf9 play\cf4 ()\
                \cf10 playingVideo\cf4  = 
\f1\b \cf5 true
\f0\b0 \cf4 \
            \}
\f1\b \cf5 else
\f0\b0 \cf4  \{\
                
\f1\b \cf5 let
\f0\b0 \cf4  noVideo = \cf7 Bundle\cf4 .\cf9 main\cf4 .\cf9 path\cf4 (forResource: \cf12 "NoVideo"\cf4 , ofType:\cf12 "mp4"\cf4 )\
                
\f1\b \cf5 let
\f0\b0 \cf4  videoURL = \cf7 URL\cf4 (fileURLWithPath: noVideo!)\
                
\f1\b \cf5 let
\f0\b0 \cf4  player2 = \cf7 AVPlayer\cf4 (url: videoURL)\
                \cf10 snapPlayer\cf4 .\cf9 player\cf4  = player2\
                \cf10 snapPlayer\cf4 .\cf9 player\cf4 ?.\cf9 play\cf4 ()\
                \cf10 playingVideo\cf4  = 
\f1\b \cf5 false
\f0\b0 \cf4 \
                \cf9 print\cf4 (\cf12 "No tiene video"\cf4 )\
            \}\
        \}\
        \cf10 abiertaLista\cf4  = 
\f1\b \cf5 true
\f0\b0 \cf4 \
    \}\
    \
    
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 imageSelected\cf4 (path: \cf7 URL\cf4 ) \{\
        \
        
\f1\b \cf5 let
\f0\b0 \cf4  imagen = \cf7 NSImage\cf4 (contentsOf: path)!\
        \cf10 snapShot\cf4 .\cf9 image\cf4  = imagen\
        \
    \}\
    \
    \
    \
    
\f1\b \cf5 override
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 viewDidAppear\cf4 () \{\
        \
        \
        
\f1\b \cf5 if
\f0\b0 \cf4  \cf9 !
\f1\b \cf5 self
\f0\b0 \cf4 .\cf9 view\cf4 .\cf9 window\cf4 !.\cf9 isZoomed\cf4 \{\
            
\f1\b \cf5 self
\f0\b0 \cf4 .\cf9 view\cf4 .\cf9 window\cf4 ?.\cf9 zoom\cf4 (
\f1\b \cf5 self
\f0\b0 \cf4 )\
        \}\
        
\f1\b \cf5 let
\f0\b0 \cf4  myGroup = \cf7 DispatchGroup\cf4 ()\
        myGroup.\cf9 enter\cf4 ()\
        \cf13 ///
\f2 \cf2 / Do your task
\f0 \cf4 \
        \cf10 ventana\cf4  = \cf12 "Lista"\cf4 \
        myGroup.\cf9 leave\cf4 () 
\f2 \cf2 //// When your task completes
\f0 \cf4 \
        myGroup.\cf9 notify\cf4 (queue: \cf7 DispatchQueue\cf4 .\cf9 main\cf4 ) \{\
\
        \
        \}\
        \cf2 // *** /FullScreen ***\cf4 \
    \}\
    \
    
\f1\b \cf5 override
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 keyDown\cf4 (with event: \cf7 NSEvent\cf4 ) \{\
\
        
\f1\b \cf5 if
\f0\b0 \cf4  \cf10 keyIsDown\cf4  \cf9 ==\cf4  
\f1\b \cf5 true
\f0\b0 \cf4  \{\
            
\f1\b \cf5 return
\f0\b0 \cf4 \
        \}\
        \cf10 keyIsDown\cf4  = 
\f1\b \cf5 true
\f0\b0 \cf4 \
\
\
\
        
\f1\b \cf5 if
\f0\b0 \cf4  \cf10 ventana\cf4  \cf9 ==\cf4  \cf12 "Lista"\cf4  \{\
\
            
\f1\b \cf5 if
\f0\b0 \cf4  event.\cf9 keyCode\cf4  \cf9 ==\cf4  \cf11 36\cf4    \{\
            \cf9 print\cf4 (\cf12 "KK"\cf4 )\
            
\f1\b \cf5 let
\f0\b0 \cf4  numero = (\cf10 juegosTableView\cf4 .\cf9 selectedRow\cf4 )\
            
\f1\b \cf5 let
\f0\b0 \cf4  rom = \cf10 rompath\cf4  \cf9 +\cf4  \cf12 "/"\cf4  \cf9 +\cf4  \cf12 "\\"\cf4 \\(\cf10 juegos\cf4 [numero])\cf12 \\""\cf4 \
            
\f1\b \cf5 var
\f0\b0 \cf4  comando = \cf10 comandoaejecutar\cf4 .\cf9 replacingOccurrences\cf4 (of: \cf12 "%ROM%"\cf4 , with: rom)\
                
\f1\b \cf5 if
\f0\b0 \cf4  \cf10 playingVideo\cf4  \cf9 ==\cf4  
\f1\b \cf5 true
\f0\b0 \cf4  \{\
                    \cf10 snapPlayer\cf4 .\cf9 player\cf4 ?.\cf9 pause\cf4 ()\
                \}\
            \cf14 Commands\cf4 .\cf10 Bash\cf4 .\cf10 system\cf4 (\cf12 "\cf4 \\(comando)\cf12 "\cf4 )\
            comando=\cf12 ""\cf4 \
            \
            
\f1\b \cf5 let
\f0\b0 \cf4  indexSet = \cf7 NSIndexSet\cf4 (index: (\cf10 juegosTableView\cf4 .\cf9 selectedRow\cf4  \cf9 +\cf4  \cf11 -1\cf4 ))\
            
\f1\b \cf5 let
\f0\b0 \cf4  indexSet2 = \cf7 NSIndexSet\cf4 (index: \cf10 juegosTableView\cf4 .\cf9 selectedRow\cf4  )\
            \cf10 juegosTableView\cf4 .\cf9 selectRowIndexes\cf4 (indexSet 
\f1\b \cf5 as
\f0\b0 \cf4  \cf7 IndexSet\cf4 , byExtendingSelection: 
\f1\b \cf5 false
\f0\b0 \cf4 )\
            \cf10 juegosTableView\cf4 .\cf9 selectRowIndexes\cf4 (indexSet2 
\f1\b \cf5 as
\f0\b0 \cf4  \cf7 IndexSet\cf4 , byExtendingSelection: 
\f1\b \cf5 false
\f0\b0 \cf4 )\
\
\
            \}\
            
\f1\b \cf5 if
\f0\b0 \cf4  event.\cf9 keyCode\cf4  \cf9 ==\cf4  \cf11 124\cf4   \{\
\
            \}\
            
\f1\b \cf5 if
\f0\b0 \cf4  event.\cf9 keyCode\cf4  \cf9 ==\cf4  \cf11 123\cf4  \{\
\
            \}\
\
\
        \}\
\}\
        \
    
\f1\b \cf5 override
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 keyUp\cf4 (with event: \cf7 NSEvent\cf4 ) \{\
        \cf10 keyIsDown\cf4  = 
\f1\b \cf5 false
\f0\b0 \cf4 \
    \}\
    \
    \
    \
    
\f1\b \cf5 @IBAction
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 backFunc\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  sender: \cf7 NSButton\cf4 ) \{\
        \
        
\f1\b \cf5 if
\f0\b0 \cf4  
\f1\b \cf5 let
\f0\b0 \cf4  controller = 
\f1\b \cf5 self
\f0\b0 \cf4 .\cf9 storyboard\cf4 ?.\cf9 instantiateController\cf4 (withIdentifier: \cf12 "HomeView"\cf4 ) 
\f1\b \cf5 as
\f0\b0 \cf4 ? \cf14 ViewController\cf4  \{\
\
            
\f1\b \cf5 self
\f0\b0 \cf4 .\cf9 view\cf4 .\cf9 window\cf4 ?.\cf9 contentViewController\cf4  = controller\
            \cf2 //abiertaLista = true\cf4 \
            \cf2 //ventana = "Principal"\cf4 \
            \cf10 cuentaboton\cf4  = \cf10 botonactual\cf4 \
        \}\
        \
        \
    \}\
    \
    \
    \
    
\f1\b \cf5 @objc
\f0\b0 \cf4  
\f1\b \cf5 private
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 onItemClicked\cf4 () \{\
        
\f1\b \cf5 let
\f0\b0 \cf4  numero = \cf10 juegosTableView\cf4 .\cf9 clickedRow\cf4 \
        
\f1\b \cf5 let
\f0\b0 \cf4  rom = \cf10 rompath\cf4  \cf9 +\cf4  \cf12 "/"\cf4  \cf9 +\cf4  \cf12 "\\"\cf4 \\(\cf10 juegos\cf4 [numero])\cf12 \\""\cf4 \
        
\f1\b \cf5 var
\f0\b0 \cf4  comando = \cf10 comandoaejecutar\cf4 .\cf9 replacingOccurrences\cf4 (of: \cf12 "%ROM%"\cf4 , with: rom)\
        
\f1\b \cf5 let
\f0\b0 \cf4  alert = \cf7 NSAlert\cf4 ()\
\
        alert.\cf9 messageText\cf4  = \cf12 "Ruta: "\cf4  \cf9 +\cf4  \cf10 rutaApp\cf4  \cf9 +\cf4  \cf12 "Comando: "\cf4  \cf9 +\cf4   comando\
        alert.\cf9 addButton\cf4 (withTitle: \cf12 "OK"\cf4 )\
        alert.\cf9 alertStyle\cf4  = .\cf9 informational\cf4 \
        
\f1\b \cf5 if
\f0\b0 \cf4  \cf10 playingVideo\cf4  \cf9 ==\cf4  
\f1\b \cf5 true
\f0\b0 \cf4  \{\
            \cf10 snapPlayer\cf4 .\cf9 player\cf4 ?.\cf9 pause\cf4 ()\
        \}\
        \cf2 //alert.runModal()\cf4 \
        \
        \cf9 print\cf4 (comando)\
        \cf14 Commands\cf4 .\cf10 Bash\cf4 .\cf10 system\cf4 (\cf12 "\cf4 \\(comando)\cf12 "\cf4 )\
        comando=\cf12 ""\cf4 \
        
\f1\b \cf5 let
\f0\b0 \cf4  indexSet = \cf7 NSIndexSet\cf4 (index: (\cf10 juegosTableView\cf4 .\cf9 selectedRow\cf4  \cf9 +\cf4  \cf11 -1\cf4 ))\
        
\f1\b \cf5 let
\f0\b0 \cf4  indexSet2 = \cf7 NSIndexSet\cf4 (index: \cf10 juegosTableView\cf4 .\cf9 selectedRow\cf4  )\
        \cf10 juegosTableView\cf4 .\cf9 selectRowIndexes\cf4 (indexSet 
\f1\b \cf5 as
\f0\b0 \cf4  \cf7 IndexSet\cf4 , byExtendingSelection: 
\f1\b \cf5 false
\f0\b0 \cf4 )\
        \cf10 juegosTableView\cf4 .\cf9 selectRowIndexes\cf4 (indexSet2 
\f1\b \cf5 as
\f0\b0 \cf4  \cf7 IndexSet\cf4 , byExtendingSelection: 
\f1\b \cf5 false
\f0\b0 \cf4 )\
        \
        \
        \
    \}\
    \
    \
    \
\}\
}